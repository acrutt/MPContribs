version: '2.2'

services:

    portal:
        mem_limit: 1G
        mem_reservation: 250m
        cpus: 1
        build:
            context: .
            dockerfile: mpcontribs-portal/Dockerfile
            args:
                - NODE_ENV=development
                - API_CNAME=localhost:5000
        command: gunicorn -b 0.0.0.0:8080 -k gevent -w 2 --access-logfile - --log-level debug --reload wsgi
        environment:
            - NODE_ENV=development
            - API_CNAME=localhost:5000
        depends_on:
            - api
            #- jhub
            #- docs
        volumes:
            - ./mpcontribs-portal/mpcontribs:/app/mpcontribs
            - ./mpcontribs-portal/webpack.config.js:/app/webpack.config.js
            - ./mpcontribs-portal/package.json:/app/package.json
            - ./mpcontribs-portal/wsgi.py:/app/wsgi.py
            - ./mpcontribs-portal/settings.py:/app/settings.py
            - ./mpcontribs-io:/mpcontribs-io
            - ./mpcontribs-client:/mpcontribs-client
            - ./binder/notebooks:/app/notebooks
        ports:
            - "8080:8080"

    api:
        cpus: 1
        mem_limit: 1G
        mem_reservation: 600m
        build:
            context: ./mpcontribs-api
        depends_on:
            - redis
            - chrome
            - kernel_gateway
        volumes:
            - ./mpcontribs-api:/app
        environment:
            #- API_CNAME=api.mpcontribs.org
            - PORTAL_CNAME=portal.mpcontribs.org
            - MPCONTRIBS_DB_NAME=mpcontribs-dev
            - PORT=5000
            #- API_CNAME=ml-api.materialsproject.cloud
            #- PORTAL_CNAME=ml.materialsproject.cloud
            #- MPCONTRIBS_DB_NAME=mpcontribs-ml
            #- PORT=5002
            - FLASK_ENV=development
            - NWORKERS=2
            - RELOAD=--reload
            - MPCONTRIBS_MONGO_HOST=$MPCONTRIBS_MONGO_HOST
            - GATEWAY_HOST=kernel_gateway:8888
            - AWS_ACCESS_KEY_ID=$AWS_ACCESS_KEY_ID
            - AWS_SECRET_ACCESS_KEY=$AWS_SECRET_ACCESS_KEY
            - AWS_SNS_TOPIC_ARN=$AWS_SNS_TOPIC_ARN
            - AWS_DEFAULT_REGION=us-east-1
        ports:
            - "5000:5000"
            - "5002:5002"

    redis:
        image: redis:alpine
        environment:
            - ALLOW_EMPTY_PASSWORD=yes

    chrome:
        image: selenium/standalone-chrome
        mem_limit: 1G
        mem_reservation: 100m
        cpus: 1
        environment:
            - START_XVFB=false
        ports:
            - "4444:4444"

    kernel_gateway:
        mem_limit: 1G
        mem_reservation: 100m
        cpus: 1
        volumes:
            - ./mpcontribs-io:/src/mpcontribs-io
            - ./mpcontribs-client:/src/mpcontribs-client
        environment:
            - KG_ALLOW_ORIGIN='*'
            - GATEWAY_HOST=kernel_gateway:8888
        build:
            context: .
            dockerfile: binder/DockerfileKernelGateway

    docs:
        build: ./docs
        volumes:
            - ./docs:/docs
        ports:
            - "8081:8081"

    jhub:
        mem_limit: 1G
        mem_reservation: 250m
        cpus: 1
        build:
            context: .
            dockerfile: binder/DockerfileJhub
        environment:
            - NODE_ENV=development
            - MAPI_KEY=$MAPI_KEY
            - DOCKER_NETWORK_NAME=mpcontribs_default
            - DOCKER_NOTEBOOK_DIR=/home/jovyan
        depends_on:
            - api
        volumes:
            - /var/run/docker.sock:/var/run/docker.sock:rw
        ports:
            - "8000:8000"

volumes:
  data-volume:
      driver_opts:
          type: none
          device: $PWD
          o: bind
