AWSTemplateFormatVersion: '2010-09-09'
Description: jhub service
Parameters:
  EnvironmentName:
    Type: String
    Default: production
    Description: A name for the environment that this cloudformation will be part of.
                 Used to locate other resources in the same environment.
  ServiceName:
    Type: String
    Default: jhub
    Description: A name for the service
  ImageUrlJhub:
    Type: String
    Description: url for the jhub docker image
  ImageUrlR2d:
    Type: String
    Description: url for the MPContribs r2d docker image
  AwsAccessKeyId:
    NoEcho: 'true'
    Type: String
  AwsSecretAccessKey:
    NoEcho: 'true'
    Type: String

Resources:
  # A log group for storing the container logs for this service
  LogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Join ['-', [!Ref 'EnvironmentName', 'service', !Ref 'ServiceName']]

  # A role for the service so it can access the tables
  JhubServiceRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
        - Effect: Allow
          Principal:
            Service: "ecs-tasks.amazonaws.com"
          Action: ['sts:AssumeRole']
      Path: /
      Policies:
      - PolicyName: jhub-sqlite
        PolicyDocument:
          Statement:
          - Effect: Allow
            Action:
              - "s3:PutObject"
              - "s3:GetObject"
              - "s3:ListBucket"
            Resource:
              - "arn:aws:s3:::mpcontribs-sqlite/jupyterhub.sqlite"
              - "arn:aws:s3:::mpcontribs-sqlite"
      - PolicyName: jhub-tasks
        PolicyDocument:
          Statement:
          - Effect: Allow
            Action:
                - "ecs:RunTask"
                - "ecs:StopTask"
                - "ecs:DescribeTasks"
                - "iam:PassRole"
            Resource:
                - "*"

  # The task definition. This is a simple metadata description of what
  # container to run, and what resource requirements it has.
  SingleUserTaskDefinition:
    Type: AWS::ECS::TaskDefinition
    Properties:
      Family: !Ref 'ServiceName'
      Cpu: 256
      Memory: 512
      NetworkMode: awsvpc
      RequiresCompatibilities:
        - FARGATE
      ExecutionRoleArn:
        Fn::ImportValue:
          !Join [':', [!Ref 'EnvironmentName', 'ECSTaskExecutionRole']]
      TaskRoleArn: !Ref 'JhubServiceRole'
      ContainerDefinitions:
        - Name: singleuser
          Image: !Ref 'ImageUrlR2d'
          LogConfiguration:
            LogDriver: 'awslogs'
            Options:
              awslogs-group: !Join ['-', [!Ref 'EnvironmentName', 'service', !Ref 'ServiceName']]
              awslogs-region: !Ref 'AWS::Region'
              awslogs-stream-prefix: !Ref 'ServiceName'

  TaskDefinition:
    Type: AWS::ECS::TaskDefinition
    Properties:
      Family: !Ref 'ServiceName'
      Cpu: 256
      Memory: 512
      NetworkMode: awsvpc
      RequiresCompatibilities:
        - FARGATE
      ExecutionRoleArn:
        Fn::ImportValue:
          !Join [':', [!Ref 'EnvironmentName', 'ECSTaskExecutionRole']]
      TaskRoleArn: !Ref 'JhubServiceRole'
      ContainerDefinitions:
        - Name: jhub
          Image: !Ref 'ImageUrlJhub'
          Environment:
            - Name: TASK_ROLE_ARN
              Value: !GetAtt 'JhubServiceRole.Arn'
            - Name: TASK_CLUSTER_NAME
              Value:
                Fn::ImportValue:
                  !Join [':', [!Ref 'EnvironmentName', 'ClusterName']]
            - Name: TASK_DEFINITION_ARN
              Value: !Ref 'SingleUserTaskDefinition'
            - Name: TASK_SECURITY_GROUPS
              Value:
                Fn::ImportValue:
                  !Join [':', [!Ref 'EnvironmentName', 'JhubSecurityGroup']]
            - Name: AWS_ACCESS_KEY_ID
              Value: !Ref 'AwsAccessKeyId'
            - Name: AWS_SECRET_ACCESS_KEY
              Value: !Ref 'AwsSecretAccessKey'
            - Name: TASK_SUBNETS
              Value:
                Fn::Join:
                  - ","
                  - - Fn::ImportValue: !Join [':', [!Ref 'EnvironmentName', 'PrivateSubnetOne']]
                    - Fn::ImportValue: !Join [':', [!Ref 'EnvironmentName', 'PrivateSubnetTwo']]
          PortMappings:
            - ContainerPort: 8000
            - ContainerPort: 8081
          LogConfiguration:
            LogDriver: 'awslogs'
            Options:
              awslogs-group: !Join ['-', [!Ref 'EnvironmentName', 'service', !Ref 'ServiceName']]
              awslogs-region: !Ref 'AWS::Region'
              awslogs-stream-prefix: !Ref 'ServiceName'

  # The service. The service is a resource which allows you to run multiple
  # copies of a type of task, and gather up their logs and metrics, as well
  # as monitor the number of running tasks and replace any that have crashed
  Service:
    Type: AWS::ECS::Service
    Properties:
      ServiceName: !Ref 'ServiceName'
      Cluster:
        Fn::ImportValue:
          !Join [':', [!Ref 'EnvironmentName', 'ClusterName']]
      LaunchType: FARGATE
      DesiredCount: 1
      NetworkConfiguration:
        AwsvpcConfiguration:
          SecurityGroups:
            - Fn::ImportValue:
                !Join [':', [!Ref 'EnvironmentName', 'JhubSecurityGroup']]
          Subnets:
            - Fn::ImportValue:
                !Join [':', [!Ref 'EnvironmentName', 'PrivateSubnetOne']]
            - Fn::ImportValue:
                !Join [':', [!Ref 'EnvironmentName', 'PrivateSubnetTwo']]
      TaskDefinition: !Ref 'TaskDefinition'
