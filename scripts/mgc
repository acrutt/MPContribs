#!/usr/bin/env python

import sys
import os
import argparse
import logging
from pymatgen.matproj.rest import MPRester

#ENDPOINT, API_KEY = "https://www.materialsproject.org/rest", os.environ.get('MAPI_KEY')
ENDPOINT, API_KEY = "http://localhost:8000/rest", os.environ.get('MAPI_KEY_LOC')

def info(args):
    with MPRester(API_KEY, endpoint=ENDPOINT) as m:
        infos = {}
        for contrib in m.query_contribs():
            mid, cid = contrib['mp_cat_id'], str(contrib['contribution_id'])
            if mid not in infos: infos[mid] = [cid]
            else: infos[mid].append(cid)
        for k,v in infos.iteritems():
            if args.mp_cat_ids is None or \
               (args.mp_cat_ids is not None and k in args.mp_cat_ids):
                print '{}: {}'.format(k, ' '.join(v))

def submit(args):
    with MPRester(API_KEY, endpoint=ENDPOINT) as m:
        print m.submit_mpfile(args.mpfile, args.cids)

def delete(args):
    with MPRester(API_KEY, endpoint=ENDPOINT) as m:
        print '{} contributions deleted.'.format(
            m.delete_contribs(args.cids)
        )

def main():
    parser = argparse.ArgumentParser(
        description="""mgc is a convenience script using the Materials Project's
        contribution framework MPContribs to submit user-contributed data to the
        MP for dissemination to MP users. For help on sub-commands:
        `mgc sub-command -h`.""",
        epilog='Author: Patrick Huck <phuck@lbl.gov> (LBNL)'
    )
    subparsers = parser.add_subparsers()

    parser_info = subparsers.add_parser(
        'info', help="""list contribution IDs pertaining to the requesting contributor."""
    ) # TODO: include descriptions in contribution list?
    parser_info.add_argument(
        '-m', '--mp_cat_ids', type=str, nargs='+',
        help="""reduce output to specific MP category IDs"""
    )
    parser_info.set_defaults(func=info)

    parser_submit = subparsers.add_parser(
        'submit', help="""submit a physical MPFile containing the contribution
        data in MPContribs-specific format."""
    )
    parser_submit.add_argument('mpfile', type=str, help='MPFile to submit')
    parser_submit.add_argument(
        '--cids', type=int, nargs='+',
        help="""list of contribution IDs to be updated w/ this MPFile"""
    )
    parser_submit.set_defaults(func=submit)

    parser_delete = subparsers.add_parser(
        'delete', help="""delete a list of contribution IDs belonging to the
        requesting contributor."""
    )
    parser_delete.add_argument(
        'cids', type=int, nargs='+',
        help="""list of contribution IDs to be deleted"""
    )
    parser_delete.set_defaults(func=delete)

    args = parser.parse_args(None if len(sys.argv) > 1 else ['--help'])
    args.func(args)

if __name__ == "__main__":
    main()
